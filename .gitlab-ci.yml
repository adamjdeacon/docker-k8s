variables:
    CLUSTER: dsr-demo
    ZONE: europe-west2-b
    APPNAME: dsr
    VERSION: ${CI_COMMIT_SHORT_SHA}
    PORT_INT: 80

services:
      - docker:dind

build_docker_image:
    image: adamdeacon/docker-gke
    tags:
        - el7
    stage: build
    only:
        - master
        - tags
    script:
        - docker info
        - export PATH=$PATH:/root/google-cloud-sdk/bin
        - gcloud config set project $PROJECT_ID
        - echo $K8S_SECRET_SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
        - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
        - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
        - docker build -t gcr.io/${PROJECT_ID}/${APPNAME}:v${VERSION} .
        - docker push gcr.io/${PROJECT_ID}/${APPNAME}:v${VERSION}

deploy_production:
    image: google/cloud-sdk:latest
    stage: deploy
    tags:
        - el7
    environment: Production
    only:
        - tags
    script:
        - gcloud config set project $PROJECT_ID
        - echo $K8S_SECRET_SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
        - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
        - echo kubectl run ${APPNAME} --image gcr.io/${PROJECT_ID}/${APPNAME}:v${VERSION} --port ${PORT_INT}
        - gcloud container clusters get-credentials $CLUSTER --zone=$ZONE
        - kubectl get pods
        - kubectl set image deployment/${APPNAME} ${APPNAME}=gcr.io/${PROJECT_ID}/${APPNAME}:v${VERSION}
        - kubectl get pods

after_script:
    - rm /tmp/$CI_PIPELINE_ID.json

